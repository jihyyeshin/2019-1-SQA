import static org.junit.Assert.*;


import org.junit.Test;
import org.junit.Before;

import org.junit.Assert;
public class CoffeeMakerTest {

	CoffeeMaker cm= new CoffeeMaker();

	@Before
	public void setup() {
		CoffeeMaker cm= new CoffeeMaker();
	}
	@Test
	public void testCoffeeMaker() {
		Recipe r=new Recipe();
		r.setName("name");
		r.setPrice(10);
		
	}
	
	@Test
	public void testCoffeeMakerFail() {
		fail("Not yet implemented");
	}

	@Test
	public void testAddRecipe() {
		//Assert.assertArrayEquals(true, cm.addRecipe(r));
	}
	
	@Test
	public void testAddRecipeFail() {
		fail("Not yet implemented");
	}

	@Test
	public void testDeleteRecipe() {
		fail("Not yet implemented");
	}

	@Test
	public void testDeleteRecipeFail() {
		fail("Not yet implemented");
	}

	@Test
	public void testEditRecipe() {
		fail("Not yet implemented");
	}
	
	@Test
	public void testEditRecipeFail() {
		fail("Not yet implemented");
	}

	@Test
	public void testAddInventory() {
		fail("Not yet implemented");
	}
	
	@Test
	public void testAddInventoryFail() {
		fail("Not yet implemented");
	}

	@Test
	public void testCheckInventory() {
		Assert.assertEquals("Coffee: 15\nMilk: 15\nSugar: 15\nChocolate: 15\n",cm.checkInventory());
	}
	
	@Test
	public void testCheckInventoryFail() {
		fail("Not yet implemented");
	}

	@Test
	public void testMakeCoffee() {
		fail("Not yet implemented");
	}
	
	@Test
	public void testMakeCoffeeFail() {
		fail("Not yet implemented");
	}

	@Test
	public void testGetRecipes() {
		fail("Not yet implemented");
	}

	@Test
	public void testGetRecipesFail() {
		fail("Not yet implemented");
	}

}
